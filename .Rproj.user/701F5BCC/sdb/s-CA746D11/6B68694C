{
    "collab_server" : "",
    "contents" : "options(scipen = 999)\n\npercent_alive <- c(86.9, 74.3, 65.3, 59.3, 55.1, 51.7, 49.1) / 100\nactual <- c(86.9, 74.3, 65.3, 59.3, 55.1, 51.7, 49.1, 46.8, 44.5, 42.7, 40.9, 39.4) / 100\n\n\n\nfn_p_t <- function(alpha, beta, period) {\n  if (period == 1) {\n    p_t <- alpha / (alpha + beta)\n    return(p_t)\n  } else {\n    p_t <- (beta + period - 2) / (alpha + beta + period - 1) * fn_p_t(alpha, beta, period -1)\n    return(p_t)\n  }\n}\n\nfn_max_ll <- function(par, percent_alive) {\n  alpha <- par[1]\n  beta <- par[2]\n  \n  len_alive <- length(percent_alive)\n  \n  percent_dead <- abs(diff(c(1, percent_alive)))\n  p_t <- sapply(1:len_alive, function(x) {fn_p_t(alpha, beta, x)})\n  s_t <- 1 - sum(p_t)\n  \n  ll <- sum((percent_dead * log(p_t)))  + percent_alive[length(percent_alive)] * log(s_t)\n  \n  return(-ll)\n  \n}\n\nfn_sGB_predict <- function(alpha, beta, last_period) {\n  p_t <- sapply(1:last_period, function(x) {fn_p_t(alpha, beta, x)})\n  pred_surival <- 1 - cumsum(p_t)\n  return(pred_surival)\n}\n\nparams <- optim(par = c(1,1), fn_max_ll, gr = NULL, percent_alive)\n\npredicted <- fn_sGB_predict(alpha = params$par[1], beta = params$par[2], last_period = 12)\n\ndata_frame(\n    period = 1:length(actual)\n  , actual = actual\n  , predicted = predicted\n) %>%\n  gather(model, retention, -period) %>%\n  ggplot(aes(x = period, y = retention, colour = model)) +\n  geom_point() +\n  geom_line() +\n  scale_y_continuous(labels = scales::percent)\n\n\n",
    "created" : 1485106966133.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "483771167",
    "id" : "6B68694C",
    "lastKnownWriteTime" : 1484757984,
    "last_content_update" : 1484757984,
    "path" : "~/Dropbox/mktg776_hw1/sBG.R",
    "project_path" : "sBG.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}