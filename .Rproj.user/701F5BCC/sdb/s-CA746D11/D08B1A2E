{
    "collab_server" : "",
    "contents" : "---\ntitle: \"MKTG776 HW1\"\nauthor: \"Jordan Farrer\"\ndate: '2017-01-23'\noutput: function(...) {\n\n          fmt <- rmarkdown::pdf_document(toc = TRUE, number_section = TRUE, df_print = 'kable',...)\n        \n          fmt$knitr$knit_hooks$size = function(before, options, envir) {\n            if (before) return(paste0(\"\\n \\\\\", options$size, \"\\n\\n\"))\n            else return(\"\\n\\n \\\\normalsize \\n\")\n          }\n        \n          return(fmt)\n        }\n\n---\n\n```{r setup, include = FALSE}\nknitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, fig.align = 'center', size = 'small')\n```\n\n# Question 1\n\n## PMF of Unshifted Beta-Geometric\n\nTo derive the unshifted beta-geometric expression for $P(T = t)$, we begin with the statement that since $\\Theta$ is unobserved, $P(T = t)$ for a randomly chosen individual is the expected value of the unshifted geometric distribution probability of dropping in period $t$, conditional on $\\Theta = \\theta$. However, we weight each $P(T=t|\\Theta = \\theta)$ by the probability of $\\Theta$ occurring via the beta distribution. \n\nThe pmf of the unshifted geometric distribution is defined as \n\n\\begin{equation} \\label{pdf_geom}\n\\ P(T=t|\\theta) = \\theta (1-\\theta)^{t}, \\; t = 0,1,2,...\n\\end{equation}\n\nThus,\n\n\\begin{align}\n\\ P(T=t|\\alpha,\\beta) & = \\int_{0}^{1} P(T=t|\\Theta=\\theta)f(\\theta|\\alpha,\\beta)d\\theta \\\\\n & = \\int_{0}^{1} \\theta(1-\\theta)^t\\frac{\\theta^{\\alpha-1}(1-\\theta)^{\\beta-1}}{B(\\alpha,\\beta)}d\\theta \\\\ \n & = \\frac{1}{B(\\alpha,\\beta)} \\int_{0}^{1} \\theta^{\\alpha}(1-\\theta)^{\\beta + t -1} d\\theta \n\\end{align}\n\nWe note that the integral above is similar to the integral expression of the beta function\n\n\\begin{equation}\n\\ B(\\alpha, \\beta) = \\int_{0}^{1}\\theta^{\\alpha -1}(1-\\theta)^{\\beta -1} d\\theta,\\; \\alpha,\\beta > 0\n\\end{equation}\n\nwith parameters $\\alpha + 1$ and $\\beta + t$. Therefore,\n\n\\begin{equation}\n\\ P(T=t|\\alpha,\\beta) = \\frac{B(\\alpha+1,\\beta+t)}{B(\\alpha,\\beta)} \\; t = 0,1,3, ...\n\\end{equation}\n\n## Survival Function of Unshifted Beta-Geometric\n\nFor the survival function, $S(t)$, we perform similar steps. However, we need to first determine the survival function of an unshifted geometric distribution. Using (\\ref {pdf_geom}) and the fact that the sum of an infinite geometric series is equal to $\\frac{a}{1-r}$, by \n\n\\begin{equation}\n\\ a + ar + ar^2 + ar^3 + \\dotsb = \\frac{a}{1-r}\n\\end{equation}\n\nwe find\n\n\\begin{align}\n\\ P(T > t) = P(T \\geq t + 1) = \\sum_{x=t+1}^{\\infty} \\theta(1-\\theta)^{x} & = \\theta[(1-\\theta)^{t+1} + (1-\\theta)^{t+2} + \\dotsb ] \\\\\n & = \\theta[\\frac{(1-\\theta)^{t+1}}{1-(1-\\theta)}] \\\\\n & = \\theta\\frac{(1-\\theta)^{t+1}}{\\theta} \\\\\n & = (1-\\theta)^{t+1}\n\\end{align}\n\nThus, \n\n\\begin{align} \n\\ S(t) = P(T>t|\\alpha,\\beta) & = \\int_{0}^{1} P(T>t|\\Theta=\\theta)f(\\theta|\\alpha,\\beta)d\\theta \\\\\n & = \\int_{0}^{1} (1-\\theta)^{t+1}\\frac{\\theta^{\\alpha-1}(1-\\theta)^{\\beta-1}}{B(\\alpha,\\beta)}d\\theta \\\\\n & = \\frac{1}{B(\\alpha,\\beta)} \\int_{0}^{1} \\theta^{\\alpha -1}(1-\\theta)^{\\beta + t} d\\theta \\label{survival_integral}\n\\end{align}\n\nLike in the derivation of $P(T=t|\\alpha,\\beta)$, we note that the integral above (\\ref{survival_integral}) is the beta function with parameters $\\alpha$ and $\\beta + t + 1$. Therefore, \n\n\\begin{equation} \\label{survival}\n\\ S(t) = P(T>t|\\alpha,\\beta) = \\frac{B(\\alpha, \\beta + t + 1)}{B(\\alpha, \\beta)},\\; t = 0,1,3, ...\n\\end{equation}\n\n## Forward-Recursion Algorithm for $P(T=t)$\n\nTo derive the forward-recursion algorithm needed to compute unshifted beta-geometric probabilities, we first note that \n\n\\begin{equation} \\label{beta_geom_1}\n\\ P(T=0|\\alpha,\\beta) = \\frac{B(\\alpha+1,\\beta)}{B(\\alpha,\\beta)}\n\\end {equation}\n\nWe know that the beta function can be expressed in terms of gamma functions:\n\n\\begin{equation} \\label{beta_as_gamma}\n\\ B(\\alpha,\\beta) = \\frac{\\Gamma(\\alpha),\\Gamma(\\beta)}{\\Gamma(\\alpha + \\beta)}\n\\end{equation}\n\nThus, we can rewrite (\\ref{beta_geom_1}) as \n\n\\begin{align} \n\\ & = \\frac{\\frac{\\Gamma(\\alpha+1)\\Gamma(\\beta)}{\\Gamma(\\alpha+\\beta+1)}}{\\frac{\\Gamma(\\alpha)\\Gamma(\\beta)}{\\Gamma(\\alpha+\\beta)}}\n\\end{align}\n\nand simplify\n\n\\begin{align} \\label{beta_geom_2} \n\\ & = \\frac{\\Gamma(\\alpha+1)\\Gamma(\\alpha+\\beta)}{\\Gamma(\\alpha)\\Gamma(\\alpha+\\beta+1)}\n\\end{align}\n\nWe recall the recursive nature of the gamma function, i.e.\n\n\\begin{equation}\n\\ \\frac{\\Gamma(x+1)}{\\Gamma(x)} = x\n\\end{equation}\n\nSo, we can rewrite (\\ref{beta_geom_2}) as\n\n\\begin{align}\n\\ & = \\frac{\\alpha\\Gamma(\\alpha)\\Gamma(\\alpha+\\beta)}{\\Gamma(\\alpha)(\\alpha+\\beta)\\Gamma(\\alpha+\\beta)} \\\\\n & = \\frac{\\alpha}{\\alpha+\\beta}\n\\end{align}\n\nThis is the same formula as $P(T=1)$ for the shifted beta-geometric distribution. However, the ratio of $\\frac{P(T=t)}{P(T=t-1)}$ will be different. We seek to find this ratio because of the identity\n\n\\begin{equation}\n\\ P(T=t) = \\frac{P(T=t)}{P(T=t-1)}P(T=t-1)\n\\end{equation}\n\nAs we can find the value of $P(T=0)$, we can find each subsequent value of $P(T=t)$ by using the previous. We express this ratio first as beta and then as gamma functions:\n\n\\begin{align} \n\\ \\frac{P(T=t)}{P(T=t-1)} & = \\frac{\\frac{B(\\alpha+1,\\beta+t)}{B(\\alpha,\\beta)}}{\\frac{B(\\alpha+1,\\beta+t-1)}{B(\\alpha,\\beta)}} \\\\\n & = \\frac{B(\\alpha+1,\\beta+t)}{B(\\alpha+1,\\beta+t-1)} \\\\\n & = \\frac{\\frac{\\Gamma(\\alpha+1)\\Gamma(\\beta+t)}{\\Gamma(\\alpha+\\beta+t+1)}}{\\frac{\\Gamma(\\alpha+1)\\Gamma(\\beta+t-1)}{\\Gamma(\\alpha+\\beta+t)}} \\\\\n & = \\frac{\\Gamma(\\beta+t)\\Gamma(\\alpha+\\beta+t)}{\\Gamma(\\alpha+\\beta+t+1)\\Gamma(\\beta+t+1)} \\\\\n & = \\frac{(\\beta+t-1)\\Gamma(\\beta+t-1)\\Gamma(\\alpha+\\beta+t)}{(\\alpha+\\beta+t)\\Gamma(\\alpha+\\beta+t)\\Gamma(\\beta+t-1)} \\\\\n & = \\frac{\\beta+t-1}{\\alpha+\\beta+t}\n\\end{align}\n\nThus,\n\n\\begin{equation}\nP(T=t) = \n\\begin{cases}\n\\frac{\\alpha}{\\alpha+\\beta} & t = 0\\\\\n\\frac{\\beta+t-1}{\\alpha+\\beta+t}P(T=t-1) & t = 1,2,3,...\\\\\n\\end{cases}\n\\end{equation}\n\n## Forward-Recursion Algorithm for $r_t$\n\nWe can derive an expression for the retention rate in period $t$ implied by the sBG model by substituting the expression for the sBG survivor function (\\ref{survival}) into the definition:\n\n\\begin{equation}\n\\ r_t = \\frac{S(t)}{S(t-1)}\n\\end{equation}\n\nSo,\n\n\\begin{align} \n\\ r_t = \\frac{S(t)}{S(t-1)} & = \\frac{\\frac{B(\\alpha,\\beta+t+1)}{B(\\alpha,\\beta)}}{\\frac{B(\\alpha,\\beta+t)}{B(\\alpha,\\beta)}} \\\\\n & = \\frac{B(\\alpha,\\beta+t+1)}{B(\\alpha,\\beta+t)} \\\\\n & = \\frac{\\frac{\\Gamma(\\alpha)\\Gamma(\\beta+t+1)}{\\Gamma(\\alpha+\\beta+t+1)}}{\\frac{\\Gamma(\\alpha)\\Gamma(\\beta+t)}{\\Gamma(\\alpha+\\beta+t)}} \\\\\n & = \\frac{\\Gamma(\\beta+t+1)\\Gamma(\\alpha+\\beta+t)}{\\Gamma(\\alpha+\\beta+t+1)\\Gamma(\\beta+t)} \\\\\n & = \\frac{(\\beta+t)\\Gamma(\\beta+t)\\Gamma(\\alpha+\\beta+t)}{(\\alpha+\\beta+t)\\Gamma(\\alpha+\\beta+t)\\Gamma(\\beta+t)} \\\\\n & = \\frac{\\beta+t}{\\alpha+\\beta+t}\n\\end{align}\n\n# Question 2\n\nWe first load the provided customer data.\n\n```{r}\npacman::p_load(tidyverse, forcats, pander)\npanderOptions('round', 2)\npanderOptions('keep.trailing.zeros', TRUE)\n\ncustomer_data <- \n  readxl::read_excel(\"Homework data.xlsx\", \n                     col_names = c(\"Year\",\"Regular\",\"High End\",\"Empty\"), skip = 1) %>%\n  select(1:3) %>%\n  filter(row_number() <= 13)\n\ncustomer_data\n```\n\nNext we define functions that implement the shifted beta-geometric (sBG) algorithm.\n\n```{r}\n# Calculates P(T=t) using recursion\nfn_p_t <- function(alpha, beta, t) {\n  if (t == 1) {\n    p_t <- alpha / (alpha + beta)\n    return(p_t)\n  } else {\n    p_t <- (beta + t - 2) / (alpha + beta + t - 1) * fn_p_t(alpha, beta, t -1) # Recursive\n    return(p_t)\n  }\n}\n\n# Calculates the log-likelihood of initial alpha and beta\n# given data (in this case the percent customers alive from t = 1)\nfn_max_ll <- function(par, percent_alive) {\n  alpha <- par[1]\n  beta <- par[2]\n  len_alive <- length(percent_alive)\n  \n  percent_dead <- abs(diff(c(1, percent_alive)))\n  p_t <- sapply(1:len_alive, function(x) {fn_p_t(alpha, beta, x)})\n  s_t <- 1 - sum(p_t)\n  \n  ll <- sum((percent_dead * log(p_t)))  + percent_alive[length(percent_alive)] * log(s_t)\n  \n  return(-ll)\n}\n\n# Using calculated alpha and beta, predict the customers\n# alive in each period\nfn_sGB_predict <- function(alpha, beta, last_period) {\n  p_t <- sapply(1:last_period, function(x) {fn_p_t(alpha, beta, x)})\n  pred_surival <- 1 - cumsum(p_t)\n  return(pred_surival)\n}\n```\n\nThe for both Regular and High End customer types and both 7- and 10-period calibrations, we run the sBG model and put the results in a table.\n\n```{r}\nresults <-\n  customer_data %>% \n  gather(customer_type, number_alive, -Year) %>%\n  rename(year = Year) %>%\n  mutate(calibration = 'Actual') %>%\n  select(customer_type, calibration, year, number_alive)\n\nparam_history <- data_frame()\n\nfor(customer_type in c('Regular','High End')) {\n  for(calibration in c(7, 10)) {\n    \n    mutate_call <- lazyeval::interp(~ a /1000, a = as.name(customer_type))\n    \n    percent_alive <- \n      (customer_data %>% \n         mutate_(.dots = setNames(list(mutate_call), \"percent_alive\")) %>% \n         filter(Year >= 1 & Year <= calibration))$percent_alive\n    \n    params <- optim(par = c(1,1), fn_max_ll, gr = NULL, percent_alive)\n    predicted <- fn_sGB_predict(alpha = params$par[1], beta = params$par[2], last_period = 12)\n    \n    param_history <- \n      param_history %>%\n      bind_rows(\n        data_frame(\n           customer_type = customer_type\n              , calibration = paste0(calibration,\"-period\")\n              , alpha = params$par[1]\n              , beta = params$par[2]\n        )\n      )\n      \n    results <-\n      results %>%\n      bind_rows(\n        data_frame(\n              customer_type = customer_type\n              , calibration = paste0(calibration,\"-period\")\n              , year = 0\n              , number_alive = 1000\n            )\n      ) %>%\n      bind_rows(\n            data_frame(\n              customer_type = customer_type\n              , calibration = paste0(calibration,\"-period\")\n              , year = 1:12\n              , number_alive = predicted * 1000\n            )\n      )\n  }\n}\n```\n\nNext, we review the results for regular and then High End customers.\n\n```{r}\nresults %>% \n  filter(customer_type == \"Regular\") %>% \n  spread(calibration, number_alive) %>%\n  select(Year = year, Actual, `7-period`, `10-period`) %>%\n  pander(caption = \"Regular Customers\", justify = c('center', rep('right',3)))\n```\n\n```{r}\nresults %>% \n  filter(customer_type == \"High End\") %>% \n  spread(calibration, number_alive) %>%\n  select(Year = year, Actual, `7-period`, `10-period`) %>%\n  pander(caption = \"High End Customers\", justify = c('center', rep('right',3)))\n```\n\nLet's also look at a plot the estimates and the actuals.\n\n```{r}\nresults %>%\n  ggplot(aes(x = year, y = number_alive, \n             colour = fct_rev(calibration), linetype = fct_rev(calibration))) +\n  geom_line() +\n  facet_grid(. ~ forcats::fct_rev(customer_type)) +\n  scale_x_continuous(breaks = scales::pretty_breaks()) +\n  labs(title = 'Shifted Beta-Geometric Model', y = 'Number of Customers Alive', x = 'Year') +\n  theme(legend.position = \"top\", legend.title = element_blank())\n```\n\nThe lines are extremely close together, so let's look at the percent error to get a better idea. First the Regular Customers:\n\n```{r}\nresults %>% \n  filter(customer_type == \"Regular\") %>% \n  spread(calibration, number_alive) %>%\n  mutate(\n    `7-period % Error` = paste0(formatC(abs((Actual - `7-period`) / Actual) * 100, \n                                        digits = 2, format = \"f\"),'%')\n    , `10-period % Error` = paste0(formatC(abs((Actual - `10-period`) / Actual) * 100, \n                                        digits = 2, format = \"f\"),'%')\n  ) %>%\n  select(Year = year, `7-period % Error`, `10-period % Error`) %>%\n  pander(align = c('center','right','right'), \n         caption = \"Regular Customers % Error Between Actual and Estimate\")\n```\n\nThen, the High End customers:\n\n```{r}\nresults %>% \n  filter(customer_type == \"High End\") %>% \n  spread(calibration, number_alive) %>%\n  mutate(\n    `7-period % Error` = paste0(formatC(abs((Actual - `7-period`) / Actual) * 100, \n                                        digits = 2, format = \"f\"),'%')\n    , `10-period % Error` = paste0(formatC(abs((Actual - `10-period`) / Actual) * 100, \n                                        digits = 2, format = \"f\"),'%')\n  ) %>%\n  select(Year = year, `7-period % Error`, `10-period % Error`) %>%\n  pander(align = c('center','right','right'), \n        caption = \"High End Customers % Error Between Actual and Estimate\")\n```\n\nWe find that for both calibrations, the estimate for the Regular customers is better (lower MAPE) than the estimate for High End Customers. For both customer types, the 7-period calibration performs worse in later periods than the 10-period calibration. This is expected because the 10-period calibration only needed to estimate two periods in the future whereas the 7-period needed to estimate five periods in the future. Interestingly, both both Regular and High End customers, the 7-period calibration performs better than the 10-period calibration in periods 3 and 4.\n\nLet's also look at the different parameters of the sBG model:\n\n```{r}\nparam_history %>%\n  pander(caption = \"sBG Parameters\")\n```\n\nRecognizing that alpha and beta are parameters for the beta distribution which weights the geometric distribution, we can look at the distribution of the unobserved parameter $\\theta$. $\\theta$ is the probability a customer will leave in period $t$. By sampling from the beta distribution for the 4 sets of parameters alpha and beta, we can show the estimated distributions of the churn probabilities. There is high density of low theta's for the High End customers as their propensity to churn is lower than Regular customers. While the shape of the Regular customers' distribution is similar to the High End - they are both J-shaped as for all four estimates have alpha < 1 and beta > 1 - there are more customers with a higher propensity to churn among Regular customers.\n\n```{r}\nestimation <-\n  param_history %>%\n  mutate(\n    density = map2(alpha, beta, function(.x, .y) {rbeta(10000, .x, .y)})\n  ) %>%\n  mutate(\n    label1 = paste0(\"atop(alpha == \", formatC(alpha, digits = 2, format = 'f'), \n                     ',beta == ', formatC(beta, digits = 2, format = 'f'),')')\n    , label2 = paste0('E(theta) == ', formatC(alpha / (alpha + beta), digits = 2, format = 'f'))\n  )\n\nestimation %>%\n  unnest() %>%\n  ggplot(aes(x = density, colour = calibration, fill = calibration)) +\n  geom_density(alpha = 1/3) +\n  facet_grid( forcats::fct_rev(calibration) ~ forcats::fct_rev(customer_type)) +\n  theme(legend.position = 'none') +\n  geom_text(data = estimation, aes(x = .75, y = 4, label = label1), parse = TRUE) +\n  geom_text(data = estimation, aes(x = .75, y = 3, label = label2), parse = TRUE) +\n  labs(x = expression(theta), y = expression(f(theta)))\n```\n\n# Question 3\n\nThe fact that $P(T=1)$ for the sBG equals the mean of the sBG is not surprising because the shifted geometric when $t=1$ is just $\\theta$. Thus, $P(T=1)$ is simply $\\theta$ times the beta distribution, which by definition is the expectation.\n\nLet $X \\sim Beta(\\alpha,\\beta)$, then\n\n\\begin{align}\n\\ E[X] = \\int_{-\\infty}^{\\infty}xf(x)dx & = \\int_{0}^{1}\\theta \\frac{\\theta^{\\alpha-1}(1-\\theta)^{\\beta-1}}{B(\\alpha,\\beta}d\\theta \\\\\n & = P(T=1|\\alpha,\\beta) = \\int_{0}^{1}\\theta(1-\\theta)^{1-1} \\frac{\\theta^{\\alpha-1}(1-\\theta)^{\\beta-1}}{B(\\alpha,\\beta}d\\theta \\\\\n & = \\int_{0}^{1}\\theta \\frac{\\theta^{\\alpha-1}(1-\\theta)^{\\beta-1}}{B(\\alpha,\\beta}d\\theta \n\\end{align}\n\n# Question 4\n\nThe implied shape of the retention curve under the beta-geometric is an increasing function of the length of a customer's relationship with the firm. The increasing retention rates in later periods is *not* a result of customers becoming \"more loyal\" (an common explanation), but rather is a result of a sorting effect in the heterogeneous population (customers with high-churn probabilities drop out earlier and the remaining customers have lower churn rates).\n\nThe figure below shows how the retention rate curve changes with different model parameters:\n\n```{r}\nfn_retention <- function(alpha, beta, t) {\n  return((beta + t - 1) / (alpha + beta + t - 1))\n}\n\nexpand.grid(alpha = c(.5, 1.5), beta = c(.5, 1.5), t = 1:12) %>%\n  as_tibble() %>%\n  arrange(desc(beta), alpha) %>%\n  mutate(\n    retention_rate = fn_retention(alpha, beta, t)\n    , alpha_beta = paste0(\"alpha == \", alpha, \"~~ beta == \", beta)\n    , alpha_beta = fct_inorder(alpha_beta)\n  ) %>%\n  ggplot(aes(x = t, y = retention_rate)) +\n  geom_line() +\n  facet_wrap(~alpha_beta, labeller= label_parsed) +\n  scale_x_continuous(breaks = scales::pretty_breaks()) +\n  labs(x = \"Period\", y = \"Retention Rate\", title = \"Retention Rates for Different Parameters\") +\n  scale_y_continuous(labels = scales::percent)\n```\n\nWe see that an optimal place for the firm is in the upper left-hand corner where alpha is less than 1 and beta is greater than 1. Under these parameters, retention is higher in earlier periods. A sub-optimal place for the firm is the lower right-hand corner where alpha is greater than 1 and beta is less than 1. Under these parameters, a large percentage of the customers leave in initial periods. However, for all four values of alpha and beta, the retention rates reaches an asymptote between 88% and 96% in period 12.\n\nThe differences are explained by the heterogeneity of the customers: a beta distribution with alpha less than 1 and beta greater than 1 has more customers with lower churn probabilities, $\\theta$, and a beta distribution with alpha greater than 1 and beta less than 1 has more customers with higher churn probabilities. This relationship is shown in the figure below where each correspond to one of the four retention rate plots above.\n\n```{r}\nexpand.grid(alpha = c(.5, 1.5), beta = c(.5, 1.5)) %>%\n  as_tibble() %>%\n  arrange(desc(beta), alpha) %>%\n  mutate(\n    theta = map2(alpha, beta, function(.x, .y) {rbeta(10000, .x, .y)})\n  ) %>%\n  mutate(\n      alpha_beta = paste0(\"alpha == \", alpha, \"~~ beta == \", beta)\n    , alpha_beta = fct_inorder(alpha_beta)\n  ) %>%\n  unnest() %>%\n  ggplot(aes(x = theta)) +\n  geom_line(stat = \"density\") +\n  facet_wrap(~alpha_beta, labeller= label_parsed) +\n  scale_x_continuous(breaks = scales::pretty_breaks()) +\n  labs(x = expression(theta), y = expression(f(theta)), \n       title = \"Estimated Distributions of Churn Probabilities\")\n```\n\n",
    "created" : 1485106503963.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3822699719",
    "id" : "D08B1A2E",
    "lastKnownWriteTime" : 1485188884,
    "last_content_update" : 1485188884176,
    "path" : "~/Dropbox/mktg776_hw1/hw1.Rmd",
    "project_path" : "hw1.Rmd",
    "properties" : {
        "last_setup_crc32" : "EB6D5E774c8b7b57"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}